generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int          @id @default(autoincrement())
  email             String       @unique
  password          String
  name              String
  uniqueKey         String       @unique @map("unique_key")
  phone             String?
  birthDate         DateTime     @map("birth_date")
  preferredLanguage String       @default("pt_BR") @map("preferred_language")
  createdAt         DateTime     @default(now()) @map("created_at")
  updatedAt         DateTime     @updatedAt @map("updated_at")
  userProfile       UserProfile?
  loginToken        LoginToken?

  @@map("users")
}

model UserProfile {
  id               Int      @id @default(autoincrement())
  user             User     @relation(fields: [userId], references: [id])
  userId           Int      @unique @map("user_id")
  profilePictureId Int?     @map("profile_picture_id")
  bannerId         Int?     @map("banner_id")
  primaryColor     String   @default("#ffffff") @map("primary_color")
  secondaryColor   String   @default("#f6f6f6") @map("secondary_color")
  backgroundColor  String   @default("ffffff") @map("background_color")
  backgroundImage  Int?     @map("background_image")
  bio              String?
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  @@map("user_profile")
}

model LoginToken {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique @map("user_id")
  token     String   @unique
  device    String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("login_token")
}
